package ${package}.controller;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import javax.validation.Valid;
import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import org.springframework.web.bind.annotation.*;
import ${package}.dao.entity.${className}Entity;
import ${package}.domain.dto.${className}DTO;
import ${package}.service.${className}Service;
import ${mainPath}.common.R;
import ${mainPath}.common.PageReq;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import javax.servlet.http.HttpServletResponse;
/**
 * @author ${author}
 * @date: ${datetime}
 * @description: ${comments}
 */

@Api(tags = "${comments}")
@Validated
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    @ApiOperation(value = "列表", httpMethod = "POST", response = R.class, notes = "列表")
    @PostMapping("/list")
    public R select${className}List(@RequestBody @Valid  PageReq<${className}DTO> req){

        return ${classname}Service.select${className}List(req);
    }

    @ApiOperation(value = "信息", httpMethod = "GET", response = R.class, notes = "信息")
    @GetMapping("/info")
    public R select${className}ById(@NotNull ${pk.attrType} ${pk.attrname}){

        return ${classname}Service.select${className}ById(${pk.attrname});
    }

    @ApiOperation(value = "保存", httpMethod = "POST", response = R.class, notes = "保存")
    @PostMapping("/save")
    public R save${className}(@RequestBody @Valid  ${className}DTO ${classname}){

        return ${classname}Service.save${className}(${classname});
    }

    @ApiOperation(value = "修改", httpMethod = "POST", response = R.class, notes = "修改")
    @PostMapping("/update")
    public R update${className}(@RequestBody @Valid  ${className}DTO ${classname}){

        return ${classname}Service.update${className}(${classname});
    }


    @ApiOperation(value = "删除", httpMethod = "POST", response = R.class, notes = "删除")
    @PostMapping("/delete")
    public R remove${className}ByIds(@RequestBody @NotEmpty List<${pk.attrType}> ${pk.attrname}s){

        return ${classname}Service.remove${className}ByIds(${pk.attrname}s);
    }

    @ApiOperation(value = "修改状态", httpMethod = "GET", response = R.class, notes = "修改状态")
    @GetMapping("/update/status")
    public R updateStatusById(@NotNull Long id){

        return ${classname}Service.updateStatusById(id);
    }
    @PostMapping("/export")
    @ApiOperation(value = "导出", httpMethod = "POST", response = R.class, notes = "导出")
    public void export(@RequestBody @Valid ${className}DTO ${classname}, HttpServletResponse response) {
        this.${classname}Service.export(${classname},response);
    }

}
